name: Cockroach CI

on: [push, pull_request]

jobs:
  test-cockroach:
    runs-on: ubuntu-latest

    env:
      CI: true
      PGVERSION: 13
      PGHOST: 127.0.0.1
      PGUSER: root
      PGPASSWORD: root
      COCKROACH: 1
      TEST_DATABASE_URL: postgres://root:root@localhost:5432/graphileengine_test
      TEST_PG_URL: postgres://root:root@localhost:5432/postgraphile_test
      LDS_TEST_DATABASE_URL: postgres://root:root@localhost:5432/lds_test
      TERM: xterm
      FORCE_COLOR: 1

    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 14.x

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Download and run Cockroach
        run: |
          curl -LO https://edge-binaries.cockroachdb.com/cockroach/cockroach.linux-gnu-amd64.LATEST
          chmod +x cockroach.linux-gnu-amd64.LATEST
          mkdir certs
          mkdir my-safe-directory
          ./cockroach.linux-gnu-amd64.LATEST cert create-ca --certs-dir=certs --ca-key=my-safe-directory/ca.key
          ./cockroach.linux-gnu-amd64.LATEST cert create-node localhost --certs-dir=certs --ca-key=my-safe-directory/ca.key
          ./cockroach.linux-gnu-amd64.LATEST cert create-client root --certs-dir=certs --ca-key=my-safe-directory/ca.key
          ./cockroach.linux-gnu-amd64.LATEST start-single-node --accept-sql-without-tls --listen-addr=:5432 --http-addr=:5757 --certs-dir=certs &
          sleep 2
          ./cockroach.linux-gnu-amd64.LATEST sql --port 5432 --certs-dir=certs --host=localhost -e "alter role root password 'root';"
      - name: Install pg_dump
        run: |
          sudo bash -c "echo deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main >> /etc/apt/sources.list.d/pgdg.list"
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update
          sudo apt-get -yqq install postgresql-client-13
      - name: Configure PostgreSQL
        run: |
          # bash .github/workflows/ci/docker-entrypoint-initdb.d/010-enable_wal.sh
          # bash .github/workflows/ci/docker-entrypoint-initdb.d/020-wal2json.sh
          bash .github/workflows/ci/docker-entrypoint-initdb.d/030-setup.sh
      - run: yarn --immutable --ignore-engines

      - name: "Build Code"
        run: yarn prepack:all

      - name: "Test Project"
        run: yarn run pretest && ./scripts/ci && yarn run posttest
